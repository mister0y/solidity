{"ast":null,"code":"var _jsxFileName = \"/Users/sjoerdsommen/Desktop/SolidityCourse/learn-solidity/SupplyChain/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport ItemManager from \"./contracts/ItemManager.json\";\nimport Item from \"./contracts/Item.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cost: 0,\n      itemName: \"exampleItem1\",\n      loaded: false\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance. \n        this.web3 = await getWeb3(); // Use web3 to get the user's accounts. \n\n        this.accounts = await this.web3.eth.getAccounts(); // Get the contract instance. \n\n        const networkId = await this.web3.eth.net.getId();\n        this.itemManager = new this.web3.eth.Contract(ItemManager.abi, ItemManager.networks[networkId] && ItemManager.networks[networkId].address);\n        this.item = new this.web3.eth.Contract(Item.abi, Item.networks[networkId] && Item.networks[networkId].address);\n        this.listenToPaymentEvent();\n        this.setState({\n          loaded: true\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations. \n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.listenToPaymentEvent = () => {\n      let self = this;\n      this.itemManager.events.SupplyChainStep().on(\"data\", async function (evt) {\n        console.log(evt);\n        let item = await self.itemManager.methods.items(evt.returnValues._itemIndex).call();\n        alert(\"Item \" + item._identifier + \" was paid please deliver it now.\");\n      });\n    };\n\n    this.handleSubmit = async () => {\n      const _this$state = this.state,\n            cost = _this$state.cost,\n            itemName = _this$state.itemName;\n      console.log(itemName, cost, this.itemManager);\n      let result = await this.itemManager.methods.createItem(itemName, cost).send({\n        from: this.accounts[0]\n      });\n      console.log(result);\n      alert(\"Send \" + cost + \" Wei to \" + result.events.SupplyChainStep.returnValues._itemAddress);\n    };\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Simply Payment/Supply Chain Example!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Items\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add Element\"), \"Cost: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cost\",\n      value: this.state.cost,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Item Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemName\",\n      value: this.state.itemName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Create new Item\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sjoerdsommen/Desktop/SolidityCourse/learn-solidity/SupplyChain/client/src/App.js"],"names":["React","Component","ItemManager","Item","getWeb3","App","state","cost","itemName","loaded","componentDidMount","web3","accounts","eth","getAccounts","networkId","net","getId","itemManager","Contract","abi","networks","address","item","listenToPaymentEvent","setState","error","alert","console","handleInputChange","event","target","value","type","checked","name","self","events","SupplyChainStep","on","evt","log","methods","items","returnValues","_itemIndex","call","_identifier","handleSubmit","result","createItem","send","from","_itemAddress","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ItemManager from \"./contracts/ItemManager.json\";\nimport Item from \"./contracts/Item.json\"\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component { \n  state = {cost: 0, itemName: \"exampleItem1\", loaded:false}; \n \n  componentDidMount = async () => { \n    try { \n      // Get network provider and web3 instance. \n      this.web3 = await getWeb3(); \n \n      // Use web3 to get the user's accounts. \n      this.accounts = await this.web3.eth.getAccounts(); \n \n      // Get the contract instance. \n      const networkId = await this.web3.eth.net.getId(); \n       \n      this.itemManager = new this.web3.eth.Contract( \n        ItemManager.abi, \n        ItemManager.networks[networkId] && ItemManager.networks[networkId].address, \n      ); \n      this.item = new this.web3.eth.Contract( \n        Item.abi, \n        Item.networks[networkId] && Item.networks[networkId].address, \n      ); \n      this.listenToPaymentEvent();\n      this.setState({loaded:true}); \n       \n    } catch (error) { \n      // Catch any errors for any of the above operations. \n      alert( \n        `Failed to load web3, accounts, or contract. Check console for details.`, \n      ); \n      console.error(error); \n    } \n  };\n\n  handleInputChange = (event) => { \n    const target = event.target; \n    const value = target.type === 'checkbox' ? target.checked : target.value; \n    const name = target.name; \n \n    this.setState({ \n      [name]: value \n    }); \n  }\n\n  listenToPaymentEvent = () => { \n    let self = this; \n    this.itemManager.events.SupplyChainStep().on(\"data\", async function(evt) { \n      console.log(evt);\n      let item = await self.itemManager.methods.items(evt.returnValues._itemIndex).call(); \n      alert(\"Item \"+item._identifier+\" was paid please deliver it now.\");\n    }); \n  }\n\n  handleSubmit = async () => { \n    const { cost, itemName } = this.state; \n    console.log(itemName, cost, this.itemManager); \n    let result = await this.itemManager.methods.createItem(itemName, cost).send({ from: this.accounts[0] }); \n    console.log(result); \n\n    alert(\"Send \"+cost+\" Wei to \"+result.events.SupplyChainStep.returnValues._itemAddress); \n  }\n\n  render() { \n    if (!this.state.loaded) { \n      return <div>Loading Web3, accounts, and contract...</div>; \n    } \n    return ( \n      <div className=\"App\"> \n        <h1>Simply Payment/Supply Chain Example!</h1> \n        <h2>Items</h2> \n         \n        <h2>Add Element</h2> \n        Cost: <input type=\"text\" name=\"cost\" value={this.state.cost} onChange={this.handleInputChange} /> \n        Item Name: <input type=\"text\" name=\"itemName\" value={this.state.itemName} onChange={this.handleInputChange} /> \n        <button type=\"button\" onClick={this.handleSubmit}>Create new Item</button> \n      </div> \n    ); \n  } \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}